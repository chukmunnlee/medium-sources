---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: ingress-es
  namespace: playground
spec:
  eventBusName: jetstream-eb
  #eventBusName: kafka-eb
  template:
    serviceAccountName: playground-sa
  resource:
    ingress:
      namespace: playground
      group: ""
      version: v1
      resource: services
      eventTypes: [ ADD, DELETE, UPDATE ]
      filter:
        fields:
        - key: metadata.annotations.autodeploy-ingress-host
          operation: =
          value: ".+"

---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: ingress-sn
  namespace: playground
spec:
  eventBusName: jetstream-eb
  #eventBusName: kafka-eb
  template:
    serviceAccountName: playground-sa
  dependencies:
  - name: service
    eventSourceName: ingress-es
    eventName: ingress
    transform:
      jq: '.operation += if .type == "ADD" then "create" else if .type == "DELETE" then "delete" else "update" end end'

  triggers:
  - parameters:
    - src:
        dependencyName: service
        dataKey: operation
      dest: k8s.operation

    template:
      name: ingress
      k8s:
        operation: create
        parameters:
        - src:
            dependencyName: service
            dataKey: body.metadata.name
          dest: metadata.name
          operation: prepend
        - src:
            dependencyName: service
            dataKey: body.metadata.annotations.autodeploy-ingress-class
          dest: spec.ingressClassName
        - src:
            dependencyName: service
            dataKey: body.metadata.annotations.autodeploy-ingress-host
          dest: spec.rules.0.host
        - src:
            dependencyName: service
            dataKey: body.metadata.name
          dest: spec.rules.0.http.paths.0.backend.service.name
        - src:
            dependencyName: service
            dataKey: body.spec.ports.0.port
            useRawData: true
          dest: spec.rules.0.http.paths.0.backend.service.port.number
        source:
          resource:
            apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
              name: -ing
              namespace: playground
            spec:
              ingressClassName: nginx
              rules:
              - host: acme.com
                http:
                  paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: mysvc
                        port:
                          number: 8080

  - template:
      name: logging
      log:
        intervalSeconds: 15

